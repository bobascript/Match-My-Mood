[{"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/index.js":"1","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/App.js":"2","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Homepage.js":"3","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Footer.js":"4","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Player.js":"5","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Login.js":"6","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Header.js":"7","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/queries.js":"8","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Moods.js":"9","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/mutations.js":"10","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/auth.js":"11","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Signup.js":"12"},{"size":541,"mtime":1678925023876,"results":"13","hashOfConfig":"14"},{"size":2185,"mtime":1679356108545,"results":"15","hashOfConfig":"14"},{"size":744,"mtime":1679356108545,"results":"16","hashOfConfig":"14"},{"size":898,"mtime":1679014873453,"results":"17","hashOfConfig":"14"},{"size":1564,"mtime":1679339910215,"results":"18","hashOfConfig":"14"},{"size":2553,"mtime":1679361829909,"results":"19","hashOfConfig":"14"},{"size":1810,"mtime":1679361937877,"results":"20","hashOfConfig":"14"},{"size":651,"mtime":1679353681108,"results":"21","hashOfConfig":"14"},{"size":3005,"mtime":1679361829910,"results":"22","hashOfConfig":"14"},{"size":1039,"mtime":1679362626468,"results":"23","hashOfConfig":"14"},{"size":1014,"mtime":1679009755715,"results":"24","hashOfConfig":"14"},{"size":2433,"mtime":1679358129409,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wa1w39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/index.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/App.js",["67","68"],[],"import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport Homepage from './components/Homepage.js';\nimport Header from './components/Header.js';\n// import Navbar from './components/Navbar.js';\nimport Login from './components/Login.js';\nimport Player from './components/Player.js'\nimport Footer from './components/Footer.js';\nimport Moods from './components/Moods';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\n\nfunction App() {\n  return (\n\n\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Header />\n          <div>\n            <Routes>\n            <Route \n                path=\"/\"\n                element={<Homepage />}\n              />\n              <Route\n                path=\"/login\"\n                element={<Login />}\n                />\n              <Route \n                path=\"/player/:moodId\"\n                element={<Player />}\n              />\n              <Route \n                path=\"/moods\"\n                element={<Moods />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n\n\n  );\n}\n\nexport default App;\n","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Homepage.js",["69"],[],"import React from 'react';\nimport '../styles/Homepage.css';\nimport Header from '../components/Header.js';\nimport { Link } from 'react-router-dom';\n// import Happy from '../assets/happypic.png';\n// import Calm from '../assets/calmpic.png';\n// import Sad from '../assets/sadpic.png';\n// import Angry from '../assets/angpic.png';\n\nfunction Homepage(){\n    return (\n\n      <div>\n\n      <div class=\"d-flex flex-column justify-content-center w-100 h-100\">\n        <Link to={`/login`}><div style={{display:\"flex\",textDecoration:\"none\",flex:\"column\",justifyContent:\"center\",width:\"100%\",height:\"100%\"}}>\n    <button className=\"loginBtn\">Log in /<br/>Sign up!</button>\n    </div></Link>\n      </div>\n\n      </div>\n\n\n\n \n    )\n\n}\n\nexport default Homepage;","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Footer.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Player.js",["70","71"],[],"import React from 'react';\nimport \"../styles/Player.css\"\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SONG, QUERY_MOOD } from '../utils/queries';\n\n\nfunction Player() {\n\n    const { moodId } = useParams();\n    const { loading, data } = useQuery(QUERY_SONG, {\n        variables: { mood: moodId }\n    });\n\n    const { loading: moodLoading, data: moodData } = useQuery(QUERY_MOOD, {\n        variables: { moodId: moodId }\n    })\n\n\n    const song = data?.song || {};\n    console.log(song.name);\n\n    const mood = moodData?.mood || {};\n    console.log(mood.name);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className=\"playerPage\">\n            <container className=\"moodBox\">\n                <h1>You're Feeling: {mood.name}</h1><br></br>\n                <h3 style={{ textDecoration: \"underline\" }}>This is your mood</h3><br></br>\n                <p>{mood.description}</p>\n            </container>\n\n            <container className=\"player\">\n                <iframe className=\"spotify\" src={song.url} allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\" />\n                <container className=\"btnBox\">\n                    <button className='heartBtn'><i class=\"fa-solid fa-heart fa-2x\"></i></button>\n                    <button className='rerollBtn'><i class=\"fa-solid fa-shuffle fa-2x\"></i></button>\n                </container>\n            </container>\n        </div>\n    )\n}\n\nexport default Player","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Login.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Header.js",["72","73"],[],"import React from 'react';\nimport '../styles/Header.css';\nimport '../styles/Navbar.css';\nimport Auth from \"../utils/auth\";\nimport Logo from '../assets/mcubedlogo.png';\nimport { Link } from 'react-router-dom';\n\n\nfunction Header() {\n  const handleLogout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  if (Auth.loggedIn()) {\n    return(\n      <div class=\"container-fluid-xxl\">\n      <header className=\"header\">\n        <Link to={`/`}><input href=\"#\" type=\"image\" src={Logo} className=\"logo\"/></Link>\n        <h1>Match My Mood</h1>\n  \n        <div>\n        {/* <div class=\"container\"> */}\n        <navbar className=\"navbar\"> \n          <nav class=\"navbar-one\"> \n          <ul>\n              <ol>\n              <a href=\"/\" onClick={handleLogout}><b>Log Out</b></a>\n              </ol>\n              <ol>\n                  <a href=\"/moods\"><b>Moods</b></a>\n              </ol>\n              <ol>\n                  <a href=\"/\"><b>Songs</b></a>\n              </ol>\n          </ul>\n          </nav>\n        </navbar> \n        </div>\n        </header>\n        </div>\n    )\n  } else {\n  return (\n    <div class=\"container-fluid-xxl\">\n    <header className=\"header\">\n      <Link to={`/`}><input href=\"#\" type=\"image\" src={Logo} className=\"logo\"/></Link>\n      <h1>Match My Mood</h1>\n\n      <div>\n      {/* <div class=\"container\"> */}\n      <navbar className=\"navbar\"> \n        <nav class=\"navbar-one\"> \n        <ul>\n            <ol>\n                <a href=\"/login\"><b>Login/Sign-up</b></a>\n            </ol>\n            <ol>\n                <a href=\"/moods\"><b>Moods</b></a>\n            </ol>\n            <ol>\n                <a href=\"/\"><b>Songs</b></a>\n            </ol>\n        </ul>\n        </nav>\n      </navbar> \n      </div>\n      </header>\n      </div>    \n  );\n  }\n}\n\nexport default Header;","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/queries.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Moods.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/mutations.js",[],[],"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/auth.js",["74"],[],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Signup.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":15,"column":8,"nodeType":"77","messageId":"78","endLine":15,"endColumn":12},{"ruleId":"75","severity":1,"message":"80","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"81","line":16,"column":22,"nodeType":"77","messageId":"78","endLine":16,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":39,"column":17,"nodeType":"84","endLine":39,"endColumn":179},{"ruleId":"85","severity":1,"message":"86","line":18,"column":24,"nodeType":"84","endLine":18,"endColumn":82},{"ruleId":"85","severity":1,"message":"86","line":46,"column":22,"nodeType":"84","endLine":46,"endColumn":80},{"ruleId":"87","severity":1,"message":"88","line":45,"column":1,"nodeType":"89","endLine":45,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Header' is defined but never used.","'moodLoading' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]
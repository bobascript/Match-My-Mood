{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const QUERY_USER = gql`\n  query User($userName: String!) {\n  user(userName: $userName) {\n    _id\n    userName\n    moods {\n      _id\n      name\n    }\n  }\n}\n`;\nexport const QUERY_MOOD = gql`\n    query mood($moodId: ID!) {\n        mood(mood: $mood) {\n            _id\n            name\n            }\n        }\n    `;\n//pull all moods\nexport const QUERY_MOODS = gql`\n  query getMoods {\n    moods {\n    _id\n    name\n    description\n  }\n}\n`;\n\n//pull a random song based on mood\nexport const QUERY_SONG = gql`\n  query Song($mood: ID!) {\n  song(mood: $mood) {\n    _id\n    name\n    url\n    moods {\n      _id\n      name\n    }\n  }\n}\n`;","map":{"version":3,"names":["gql","QUERY_USER","QUERY_MOOD","QUERY_MOODS","QUERY_SONG"],"sources":["/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/utils/queries.js"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query User($userName: String!) {\n  user(userName: $userName) {\n    _id\n    userName\n    moods {\n      _id\n      name\n    }\n  }\n}\n`;\n\nexport const QUERY_MOOD = gql`\n    query mood($moodId: ID!) {\n        mood(mood: $mood) {\n            _id\n            name\n            }\n        }\n    `\n//pull all moods\nexport const QUERY_MOODS = gql`\n  query getMoods {\n    moods {\n    _id\n    name\n    description\n  }\n}\n`;\n\n//pull a random song based on mood\nexport const QUERY_SONG = gql`\n  query Song($mood: ID!) {\n  song(mood: $mood) {\n    _id\n    name\n    url\n    moods {\n      _id\n      name\n    }\n  }\n}\n`;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,UAAU,GAAGD,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,UAAU,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,OAAO,MAAMG,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAGJ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
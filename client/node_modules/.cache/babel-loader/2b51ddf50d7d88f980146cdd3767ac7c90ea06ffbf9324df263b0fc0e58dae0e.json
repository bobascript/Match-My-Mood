{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Moods.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/Moods.css';\n// import Header from '../components/Header.js';\nimport Happy from '../assets/happypic.png';\nimport Calm from '../assets/calmpic.png';\nimport Sad from '../assets/sadpic.png';\nimport Angry from '../assets/angpic.png';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MOODS } from '../utils/queries';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Moods() {\n  _s();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_MOODS);\n  const moods = (data === null || data === void 0 ? void 0 : data.moods) || [];\n  console.log(moods._id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flex: \"column\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"05%\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row row-cols-1 row-cols-sm-2 g-5 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card text-bg-dark mb-3 w-80\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: `${mood.name}pic`,\n              src: mood.name,\n              class: \"card-img-top\",\n              id: `${mood.name}-image`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                type: \"button\",\n                className: \"btn btn-outline-success btn-lg btn-block\",\n                to: `/player/${moods}`,\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"HAPPY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-text font-weight-bold\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Moods, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n_c = Moods;\nexport default Moods;\nvar _c;\n$RefreshReg$(_c, \"Moods\");","map":{"version":3,"names":["React","Happy","Calm","Sad","Angry","useQuery","QUERY_MOODS","Link","jsxDEV","_jsxDEV","Moods","_s","loading","data","moods","console","log","_id","children","map","mood","style","display","flex","justifyContent","width","height","padding","alignItems","class","alt","name","src","id","fileName","_jsxFileName","lineNumber","columnNumber","type","className","to","_c","$RefreshReg$"],"sources":["/Users/anthonyreedy/bootcamp/Match-My-Mood/client/src/components/Moods.js"],"sourcesContent":["import React from 'react';\nimport '../styles/Moods.css';\n// import Header from '../components/Header.js';\nimport Happy from '../assets/happypic.png';\nimport Calm from '../assets/calmpic.png';\nimport Sad from '../assets/sadpic.png';\nimport Angry from '../assets/angpic.png';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MOODS } from '../utils/queries';\nimport { Link } from 'react-router-dom';\n\nfunction Moods() {\n\n  const { loading, data } = useQuery(QUERY_MOODS);\n  const moods = data?.moods || [];\n  console.log(moods._id);\n\n    return (\n    <div>\n      \n     {moods.map((mood) => (\n      <div style={{display:\"flex\",flex:\"column\", justifyContent:\"center\",width:\"100%\",height:\"100%\", padding:\"05%\", alignItems:\"center\"}}>\n     <div class=\"row row-cols-1 row-cols-sm-2 g-5 text-center\">\n  \n        <div class=\"col\">\n          <div class=\"card text-bg-dark mb-3 w-80\">\n            <img alt={`${mood.name}pic`} src={mood.name} class=\"card-img-top\" id={`${mood.name}-image`}/>\n            <div class=\"card-body\">\n            {/* <button><b> <h1 class=\"card-title text-bg-dark\">HAPPY</h1></b></button> */}\n            <Link\n           type=\"button\" className=\"btn btn-outline-success btn-lg btn-block\" to={`/player/${moods}`}>\n            <h1><b>HAPPY</b></h1>\n            </Link>\n              <p class=\"card-text font-weight-bold\"></p>\n            </div>\n          </div>\n        </div> \n    </div> \n\n   </div>\n   ))}\n   </div>      \n         \n    );\n}\n\nexport default Moods;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}